---
AWSTemplateFormatVersion: 2010-09-09
Description: Provides RDS deployment ontop of main template
Metadata:
  Stack:
    Value: 3
  VersionDate:
    Value: 20190702
  Identifier:
    Value: template-Database-pci
  Input:
    Description: VPC, SubnetIDs, CIDR blocks, KeyNames, AMIs, DB
      name and password
  Output:
    Description: Outputs ID of all deployed resources
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: AWS Quick Start Configuration
      Parameters:
      - QSS3BucketName
      - QSS3KeyPrefix
    - Label:
        default: Availability Zone Selection
      Parameters:
      - RegionAZ1Name
      - RegionAZ2Name
    - Label:
        default: Network (existing VPC config)
      Parameters:
      - ProductionCIDR
      - ProductionVPC
      - DBPrivateSubnetA
      - DBPrivateSubnetB
    - Label:
        default: Database Configuration
      Parameters:
      - DBName
      - DBUser
      - DBPassword
      - CentralLogBucket
    ParameterLabels:
      RegionAZ1Name:
        default: Choose 1 of 2 Availability Zones to Deploy Aurora
      RegionAZ2Name:
        default: Choose 2 of 2 Availability Zones to Deploy Aurora
      ProductionCIDR:
        default: Ingress to Aurora Database
      ProductionVPC:
        default: VPC to Deploy Aurora Database
      DBPrivateSubnetA:
        default: Choose 1 of 2 Subnets to Create a Subnet Group for Aurora
      DBPrivateSubnetB:
        default: Choose 2 of 2 Subnets to Create a Subnet Group for Aurora
      DBName:
        default: Aurora Database Name
      DBUser:
        default: Aurora Database User
      DBPassword:
        default: Aurora Database Password
      CentralLogBucket:
        default: Centralized logging bucket
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
Parameters:
  ProductionCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    Description: CIDR Range to allow ingress into Database
    Type: String
    Default: 10.100.0.0/16
  ProductionVPC:
    Description: Production VPC
    Type: AWS::EC2::VPC::Id
  DBPrivateSubnetA:
    Description: Database Private Subnet A
    Type: AWS::EC2::Subnet::Id
  DBPrivateSubnetB:
    Description: Database Private Subnet B
    Type: AWS::EC2::Subnet::Id
  RegionAZ1Name:
    Description: AvailabilityZone 1
    Type: AWS::EC2::AvailabilityZone::Name
  RegionAZ2Name:
    Description: AvailabilityZone 2
    Type: AWS::EC2::AvailabilityZone::Name
  DBName:
    Description: Name of RDS Database
    Type: String
  DBUser:
    Description: Username of DB Instance
    Type: String
  DBPassword:
    Description: Password of DB Instance
    Type: String
    NoEcho: True
  CentralLogBucket:
    Type: String
    Description: The Amazon S3 bucket to send Amazon Aurora audit logs
    Default: ''
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-.]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, periods (.), and hyphens (-). It cannot start or
      end with a hyphen (-). If you are unsure, do not change this value.
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-). If you are unsure, do not change this value.
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/). If you are unsure, do not change this value.
    Default: quickstart-compliance-pci/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/). If you are unsure, do not change this value.
    Type: String
Conditions:
  GovCloudCondition: !Or [!Equals [!Ref "AWS::Region", 'us-gov-west-1'], !Equals [!Ref "AWS::Region", 'us-gov-east-1']]
  GovCloudEastCondition: !Equals [!Ref "AWS::Region", 'us-gov-east-1']
  GovCloudWestCondition: !Equals [!Ref "AWS::Region", 'us-gov-west-1']
Resources:
  ProcRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: FHtransform
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Effect: Allow
              Action:
              - logs:*
              Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*
            - Effect: Allow
              Action:
              - es:ESHttpPost
              Resource: !Sub arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/*
            - Effect: Allow
              Action:
              - s3:AbortMultipartUpload
              - s3:GetBucketLocation
              - s3:GetObject
              - s3:ListBucket
              - s3:ListBucketMultipartUploads
              - S3:PutObject
              Resource: !Sub arn:aws:s3:::${CentralLogBucket}
            - Effect: Allow
              Action:
              - firehose:*
              Resource: !Sub arn:aws:firehose:${AWS::Region}:${AWS::AccountId}:deliverystream/aws-rds-logs-analytics
  LambdaFirehoseProcessor:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: Process RDS logs from CloudWatch
      Environment:
        Variables:
          # V56536055 - 10/08/2018 - better logging capabilities
          LOG_LEVEL: 'INFO' #change to WARN, ERROR or DEBUG as needed
      Handler: index.handler
      Runtime: nodejs8.10
      Timeout: 300
      Role: !GetAtt ProcRole.Arn
      FunctionName: LambdaFirehoseProcessor
      Code:
        S3Bucket: !GetAtt 'CopyZipsTemplate.Outputs.LambdaZipsBucket'
        S3Key: !Sub '${QSS3KeyPrefix}functions/packages/FHProcessor/lambda.zip'
  DBParamGroup:
    Type: "AWS::RDS::DBClusterParameterGroup"
    Properties:
      Description: "EnableAuditLog"
      Family: "aurora5.6"
      Parameters:
        server_audit_logging: 1
        server_audit_events: CONNECT, QUERY, TABLE
        server_audit_logs_upload: 1
  CloudWatchRole:
    Type: AWS::IAM::Role
    DependsOn: StreamS3only
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: 'Allow'
          Principal:
            Service: !Sub 'logs.${AWS::Region}.amazonaws.com'
          Action: 'sts:AssumeRole'
      RoleName: CWLtoKinesisRole
      Path: /
      Policies:
        - PolicyName: CloudWatchRoleFH
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowStream
                Effect: Allow
                Action: firehose:*
                Resource: !Sub arn:aws:firehose:${AWS::Region}:${AWS::AccountId}:deliverystream/aws-rds-logs-analytics
              - Effect: Allow
                Action: kinesis:*
                Resource: !Sub arn:aws:firehose:${AWS::Region}:${AWS::AccountId}:deliverystream/aws-rds-logs-analytics
              - Effect: Allow
                Action: logs:PutSubscriptionFilter
                Resource: '*'
              - Effect: Allow
                Action: iam:PassRole
                Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/CWLtoKinesisRole
              - Effect: Allow
                Action:
                - lambda:InvokeFunction
                - lambda:GetFunctionConfiguration
                Resource:
                - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:%FIREHOSE_DEFAULT_FUNCTION%:%FIREHOSE_DEFAULT_VERSION%
                - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:LambdaFirehoseProcessor
  SubscriptionFilterAudit:
    Type: AWS::Logs::SubscriptionFilter
    DependsOn:
      - StreamS3only
      - CloudWatchRole
    Properties:
      LogGroupName: /aws/rds/cluster/my-pcicluster1/audit
      FilterPattern: ''
      DestinationArn: !Sub arn:aws:firehose:${AWS::Region}:${AWS::AccountId}:deliverystream/aws-rds-logs-analytics
      RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/CWLtoKinesisRole
  CloudWatchLogGroupS3:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/rds/cluster/my-pcicluster1/S3
      RetentionInDays: 365
  CloudWatchLogGroupS3audit:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/rds/cluster/my-pcicluster1/audit
      RetentionInDays: 365
  CloudWatchLogStreamS3:
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName: !Ref CloudWatchLogGroupS3
      LogStreamName: !Sub aws-rds-s3-logs-${AWS::Region}
  StreamS3only:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: aws-rds-logs-analytics
      DeliveryStreamType: DirectPut
      ExtendedS3DestinationConfiguration:
        BucketARN: !Sub arn:aws:s3:::${CentralLogBucket}
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 120
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: !Ref CloudWatchLogGroupS3
          LogStreamName: !Ref CloudWatchLogStreamS3
        CompressionFormat: UNCOMPRESSED
        ErrorOutputPrefix: rds_error
        Prefix: !Sub aws-${AWS::Region}-rds-logs
        RoleARN: !GetAtt FirehoseRoleS3.Arn
        ProcessingConfiguration:
          Enabled: true
          Processors:
            - Parameters:
                - ParameterName: LambdaArn
                  ParameterValue: !GetAtt LambdaFirehoseProcessor.Arn
              Type: Lambda
  FirehoseRoleS3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: 'Allow'
          Principal:
            Service: 'firehose.amazonaws.com'
          Action: 'sts:AssumeRole'
          Condition:
            StringEquals:
              sts:ExternalId: !Sub ${AWS::AccountId}
      Path: /
      Policies:
        - PolicyName: Firehose_Role_S3
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: glue:GetTableVersions
                Resource: "*"
              - Effect: Allow
                Action:
                - s3:AbortMultipartUpload
                - s3:GetBucketLocation
                - s3:GetObject
                - s3:ListBucket
                - s3:PutObject
                Resource:
                - !Sub arn:aws:s3:::${CentralLogBucket}
                - !Sub arn:aws:s3:::${CentralLogBucket}/*
              - Effect: Allow
                Action:
                - lambda:InvokeFunction
                - lambda:GetFunctionConfiguration
                Resource:
                - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:%FIREHOSE_DEFAULT_FUNCTION%:%FIREHOSE_DEFAULT_VERSION%
                - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:LambdaFirehoseProcessor
              - Effect: "Allow"
                Action:
                  - "iam:PassRole"
                Resource: "*"
              - Effect: Allow
                Action: logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/kinesisfirehose/aws-rds-logs-analytics:log-stream:*
  SecurityGroupRDS:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Port 3306 database for access
      GroupName: RDS SecurityGroup
      VpcId: !Ref ProductionVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        CidrIp: !Ref ProductionCIDR
      Tags:
      - Key: Name
        Value: sg-database-access
  AuroraStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub
        - https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-amazon-aurora-mysql/templates/aurora_mysql.template.yaml
        - QSS3Region:
            Fn::If:
            - GovCloudCondition
            - s3-us-gov-west-1
            - s3
      Parameters:
        Subnet1ID: !Ref DBPrivateSubnetA
        Subnet2ID: !Ref DBPrivateSubnetB
        VPCID: !Ref ProductionVPC
        DBName: !Ref DBName
        DBMasterUsername: !Ref DBUser
        DBMasterUserPassword: !Ref DBPassword
        RotateDBPassword: 'true'
        CustomDBSecurityGroup: !Ref SecurityGroupRDS
  CopyZipsTemplate:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/copy-zips.template.yaml"
      Parameters:
        QSS3BucketName: !Ref 'QSS3BucketName'
        QSS3KeyPrefix: !Ref 'QSS3KeyPrefix'
        SourceObjects: "functions/packages/FHProcessor/lambda.zip"

Outputs:
  AuroraClusterEndpoint:
    Value: !GetAtt AuroraStack.Outputs.AuroraClusterEndpoint
  SecurityGroupRDS:
    Value: !Ref SecurityGroupRDS
  DBName:
    Value: !Ref DBName
  Help:
    Description: For assistance or questions regarding this quickstart please email
      compliance-accelerator@amazon.com
    Value: ''
...
